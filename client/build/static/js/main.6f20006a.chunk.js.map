{"version":3,"sources":["utils/socket.js","components/Alert/index.js","components/Nav/index.js","components/Hero/index.js","components/SearchForm/index.js","components/Book/index.js","components/BookResults/index.js","utils/API.js","pages/Search.js","utils/parseBooks.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js","assets/images/books-bg.jpg"],"names":["socket","io","connect","useStyles","makeStyles","theme","createStyles","root","marginRight","msg","color","Alert","classes","useState","response","setResponse","useEffect","on","data","Container","maxWidth","className","Typography","component","width","marginBottom","title","flexGrow","display","breakpoints","up","links","textDecoration","offset","mixins","toolbar","Header","AppBar","position","Toolbar","to","variant","Button","hero","height","backgroundImage","heroImg","backgroundSize","paddingTop","textAlign","textShadow","Hero","margin","input","form","buttons","SearchForm","props","onSubmit","handleSubmit","Grid","container","spacing","item","xs","gutterBottom","sm","TextField","id","label","type","name","onChange","handleInputChange","border","book","padding","Book","bookInfo","_id","authors","description","image","link","paragraph","join","src","alt","href","target","page","onClick","saveBook","deleteBook","BookResults","bookResults","map","key","searchTerm","axios","get","delete","bookData","post","Search","setBookResults","setSearchTerm","event","value","preventDefault","split","trim","API","then","res","totalItems","items","etag","volumeInfo","imageLinks","thumbnail","infoLink","catch","err","console","log","emit","Saved","savedBooks","setSavedBooks","loadBooks","App","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"+PAIeA,E,MAFAC,GAAGC,QAAQ,yBCIpBC,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,YAAa,QAEjBC,IAAK,CACDC,MAAO,cAMJ,SAASC,IAEpB,IAAMC,EAAUT,IAFY,EAIIU,mBAAS,IAJb,mBAIrBC,EAJqB,KAIXC,EAJW,KAY5B,OANAC,qBAAU,WACNhB,EAAOiB,GAAG,aAAa,SAAAC,GACnBH,EAAYG,QAEjB,IAIC,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,UAAWT,EAAQL,MACxC,yBAAKc,UAAWT,EAAQH,KACpB,kBAACa,EAAA,EAAD,CAAYC,UAAU,KAAKT,KCzB3C,IAAMX,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFiB,MAAO,OACPC,aAAc,GAElBC,MAAM,aACFC,SAAU,EACVjB,MAAO,OACPkB,QAAS,QACRvB,EAAMwB,YAAYC,GAAG,MAAQ,CAC1BF,QAAS,UAIjBG,MAAO,CACHC,eAAgB,OAChBtB,MAAO,QAEXuB,OAAQ5B,EAAM6B,OAAOC,aAMd,SAASC,IAEpB,IAAMxB,EAAUT,IAEhB,OACI,4BAAQkB,UAAWT,EAAQL,MACvB,kBAAC8B,EAAA,EAAD,CAAQC,SAAS,SACb,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,IAAInB,UAAWT,EAAQmB,OAAhC,IAAwC,kBAACT,EAAA,EAAD,CAAYmB,QAAQ,KAAKpB,UAAWT,EAAQc,OAA5C,iBAGxC,kBAACf,EAAD,MACA,kBAAC,IAAD,CAAM6B,GAAG,KAAI,kBAACE,EAAA,EAAD,CAAQrB,UAAWT,EAAQmB,OAA3B,WACb,kBAAC,IAAD,CAAMS,GAAG,UAAS,kBAACE,EAAA,EAAD,CAAQrB,UAAWT,EAAQmB,OAA3B,kBAG1B,yBAAKV,UAAWT,EAAQqB,U,qBC1C9B9B,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTqC,KAAM,CACFC,OAAQ,IACRC,gBAAgB,OAAD,OAASC,IAAT,KACfC,eAAgB,SAEpBrB,MAAO,CACHsB,WAAY,GACZtC,MAAO,OACPuC,UAAW,QACXC,WAAY,qBAMT,SAASC,IAEpB,IAAMvC,EAAUT,IAEhB,OACI,6BAASkB,UAAWT,EAAQ+B,MACxB,kBAACxB,EAAA,EAAD,KACI,yBAAKE,UAAWT,EAAQc,OACpB,kBAACJ,EAAA,EAAD,CAAYmB,QAAQ,KAAKlB,UAAU,MAAnC,uBACA,kBAACD,EAAA,EAAD,CAAYC,UAAU,KAAKkB,QAAQ,MAAnC,4C,sBCzBdtC,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACF6C,OAAQ,iBAEZC,MAAO,CACH7B,MAAO,QAEX8B,KAAM,CACFF,OAAQ,oBAEZG,QAAS,CACLH,OAAQ,aAML,SAASI,EAAWC,GAE/B,IAAM7C,EAAUT,IAEhB,OACI,kBAACgB,EAAA,EAAD,CAAWE,UAAWT,EAAQL,MAC1B,0BAAMc,UAAWT,EAAQ0C,KAAMI,SAAUD,EAAME,cAC3C,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACrB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAAC1C,EAAA,EAAD,CAAY2C,cAAY,EAACxB,QAAQ,KAAKlB,UAAU,MAAhD,iBAIJ,kBAACqC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIE,GAAI,IACnB,kBAACC,EAAA,EAAD,CAAW9C,UAAWT,EAAQyC,MAAOe,GAAG,kBAAkBC,MAAM,SAASC,KAAK,SAASC,KAAK,SAAS9B,QAAQ,WAAW+B,SAAUf,EAAMgB,qBAE5I,kBAACb,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAACxB,EAAA,EAAD,CAAQrB,UAAWT,EAAQ2C,QAASd,QAAQ,YAAY/B,MAAM,YAAY4D,KAAK,UAA/E,cCpCxB,IAAMnE,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFmE,OAAQ,oBACRjD,aAAc,QAElBkD,KAAM,CACFC,QAAS,iBAEbrB,QAAS,CACLH,OAAQ,aAML,SAASyB,EAAKpB,GAEzB,IAAM7C,EAAUT,IAFgB,EAI0BsD,EAAMqB,SAAxDC,EAJwB,EAIxBA,IAAKrD,EAJmB,EAInBA,MAAOsD,EAJY,EAIZA,QAASC,EAJG,EAIHA,YAAaC,EAJV,EAIUA,MAAOC,EAJjB,EAIiBA,KAEjD,OACI,kBAAChE,EAAA,EAAD,CAAWE,UAAWT,EAAQL,MAC1B,kBAACqD,EAAA,EAAD,CAAMvC,UAAWT,EAAQ+D,KAAMd,WAAS,EAACC,QAAS,GAC9C,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,IACX,kBAAC1C,EAAA,EAAD,CAAY2C,cAAY,EAACxB,QAAQ,KAAKlB,UAAU,MAC3CG,GAEL,kBAACJ,EAAA,EAAD,CAAYmB,QAAQ,QAAQ/B,MAAM,cAAca,UAAU,IAAI6D,WAAS,GAClEJ,GAAWA,EAAQK,KAAK,QAGjC,kBAACzB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,yBAAKoB,IAAKJ,EAAOK,IAAK7D,KAE1B,kBAACkC,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIE,GAAI,GACnB,kBAAC5C,EAAA,EAAD,CAAYmB,QAAQ,QAAQ/B,MAAM,gBAAgBa,UAAU,IAAI6D,WAAS,GACpEH,GAEL,kBAACvC,EAAA,EAAD,CAAQrB,UAAWT,EAAQ2C,QAASiC,KAAML,EAAMM,OAAO,SAAShD,QAAQ,YAAY/B,MAAM,WAA1F,QACgB,WAAf+C,EAAMiC,KACH,kBAAChD,EAAA,EAAD,CAAQrB,UAAWT,EAAQ2C,QAASd,QAAQ,YAAY/B,MAAM,UAAUiF,QAAS,kBAAMlC,EAAMmC,SAASnC,EAAMqB,YAA5G,QACA,kBAACpC,EAAA,EAAD,CAAQrB,UAAWT,EAAQ2C,QAASd,QAAQ,YAAY/B,MAAM,YAAYiF,QAAS,kBAAMlC,EAAMoC,WAAWd,KAA1G,aC9CT,SAASe,EAAYrC,GAAQ,IAEhCsC,EAA4CtC,EAA5CsC,YAAaH,EAA+BnC,EAA/BmC,SAAUC,EAAqBpC,EAArBoC,WAAYH,EAASjC,EAATiC,KAE3C,OACI,kBAACvE,EAAA,EAAD,KACK4E,EAAYC,KAAI,SAAArB,GACb,OAAO,kBAACE,EAAD,CAAMoB,IAAKtB,EAAKP,IAAMO,EAAKI,IAAKD,SAAUH,EAAMe,KAAMA,EAAME,SAAUA,EAAUC,WAAYA,Q,qBCVpG,EAGQ,SAAUK,GACzB,OAAOC,IAAMC,IAAN,wDAA2DF,KAJ3D,EAQD,WACN,OAAOC,IAAMC,IAAI,eATV,EAgBC,SAAUhC,GAClB,OAAO+B,IAAME,OAAO,cAAgBjC,IAjB7B,EAoBD,SAAUkC,GAChB,OAAOH,IAAMI,KAAK,aAAcD,ICdzB,SAASE,IAAU,IAAD,EAES3F,mBAAS,IAFlB,mBAEtBkF,EAFsB,KAETU,EAFS,OAGO5F,mBAAS,IAHhB,mBAGtBqF,EAHsB,KAGVQ,EAHU,KAkC7B,OACI,iCACI,kBAACvF,EAAA,EAAD,KACI,kBAACqC,EAAD,CAAYiB,kBAZE,SAAAkC,GACtBD,EAAcC,EAAMlB,OAAOmB,QAW+BjD,aARzC,SAAAgD,GACjBA,EAAME,iBACMX,EAAWY,MAAM,KAAKzB,KAAK,KAAK0B,OAxB5CC,EAAsBd,GACjBe,MAAK,SAAAC,GACFA,EAAIhG,KAAKiG,WAAa,EAAIV,EAA0BS,EAAIhG,KAAKkG,MCPpDpB,KAAI,SAAArB,GACrB,IAAIP,EAAKO,EAAKP,GAAKO,EAAKP,GAAKO,EAAK0C,KAAO,GACrC3F,EAAQiD,EAAK2C,WAAW5F,MAAQiD,EAAK2C,WAAW5F,MAAQ,GACxDsD,EAAUL,EAAK2C,WAAWtC,QAAUL,EAAK2C,WAAWtC,QAAU,GAC9DC,EAAcN,EAAK2C,WAAWrC,YAAcN,EAAK2C,WAAWrC,YAAc,GAC1EC,EAAQP,EAAK2C,WAAWC,WAAa5C,EAAK2C,WAAWC,WAAWC,UAAY,GAC5ErC,EAAOR,EAAK2C,WAAWG,SAAW9C,EAAK2C,WAAWG,SAAW,GASjE,MARa,CACTrD,KACA1C,QACAsD,UACAC,cACAC,QACAC,YDLQsB,EAAe,CAAC,uBAEvBiB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,SA0BF,oBAAnB5B,EAAY,GACT,kBAACzE,EAAA,EAAD,wBACA,kBAACwE,EAAD,CAAaC,YAAaA,EAAaH,SAxBvD,SAAkBjB,GACdqC,EAAarC,GACRsC,MAAK,SAAAC,GACFlH,EAAO8H,KAAK,UAAZ,UAA0BZ,EAAIhG,KAAKQ,MAAnC,wBAEHgG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAmByCjC,KAAK,aE1CpF,IAAMvF,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACF6C,OAAQ,iBAEZ1B,MAAO,CACH0B,OAAQ,uBAEZG,QAAS,CACLH,OAAQ,aAKL,SAAS2E,IAEpB,IAAMnH,EAAUT,IAFY,EAIQU,mBAAS,IAJjB,mBAIrBmH,EAJqB,KAITC,EAJS,KAc5B,SAASC,IACLlB,IACKC,MAAK,SAAAC,GAAG,OACLe,EAAcf,EAAIhG,SAErBwG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAUlC,OArBA3G,qBAAU,WACNkH,MACD,IAoBC,iCACI,kBAAC/G,EAAA,EAAD,CAAWE,UAAWT,EAAQL,MAC1B,kBAACe,EAAA,EAAD,CAAYD,UAAWT,EAAQc,MAAOuC,cAAY,EAACxB,QAAQ,KAAKlB,UAAU,MAA1E,eAGA,kBAACuE,EAAD,CAAaC,YAAaiC,EAAYnC,WAZlD,SAAoBzB,GAChB4C,EAAe5C,GACV6C,MAAK,SAAAC,GAAG,OAAIgB,OACZR,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OASwCjC,KAAK,Y,YC3BpEyC,MAtBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK9G,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC8B,EAAD,MACA,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiF,OAAK,EAACC,KAAK,KAChB,kBAAC7B,EAAD,OAEF,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,UAChB,kBAACN,EAAD,YCTRO,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACT5B,MAAK,SAAAgC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,WAK1B3B,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBH,OAAM,SAAA8B,GACL5B,QAAQ4B,MAAM,4CAA6CA,MChEjEC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDclC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,GAAwBtB,OAAOC,UAC3CsB,SAAWvB,OAAOC,SAASsB,OAIvC,OAGFvB,OAAOwB,iBAAiB,QAAQ,WAC9B,IAAMnB,EAAK,UAAMiB,GAAN,sBAENxB,EAwCX,SAAiCO,GAE/BoB,MAAMpB,GACH5B,MAAK,SAAAnG,GAGkB,MAApBA,EAASoJ,SACuD,IAAhEpJ,EAASqJ,QAAQ/D,IAAI,gBAAgBgE,QAAQ,cAG7CtB,UAAUC,cAAcsB,MAAMpD,MAAK,SAAAgC,GACjCA,EAAaqB,aAAarD,MAAK,WAC7BuB,OAAOC,SAAS8B,eAKpB3B,EAAgBC,MAGnBnB,OAAM,WACLE,QAAQC,IACN,oEAzDA2C,CAAwB3B,GAHxBD,EAAgBC,OC7BxB4B,I,mBCPAC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.6f20006a.chunk.js","sourcesContent":["// sets up Socket.io connection with server\r\nimport { io } from \"socket.io-client\";\r\nconst socket = io.connect(\"http://localhost:3001\"); // use this line when running locally\r\n// const socket = io.connect(\"https://gb-search-n-save.herokuapp.com/\"); // use this when deployed on Heroku\r\nexport default socket;","import React, { useState, useEffect } from \"react\";\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport socket from '../../utils/socket';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            marginRight: \"30px\"\r\n        },\r\n        msg: {\r\n            color: \"white\",\r\n        }\r\n    })\r\n);\r\n\r\n// Alert for Socket.io messages when books are saved\r\nexport default function Alert() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [response, setResponse] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        socket.on(\"broadcast\", data => {\r\n            setResponse(data);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <Container maxWidth=\"xs\" className={classes.root}>\r\n            <div className={classes.msg}>\r\n                <Typography component=\"p\">{response}</Typography>\r\n            </div>\r\n        </Container>\r\n\r\n    )\r\n}","import React from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport Alert from \"../Alert\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: \"100%\",\r\n            marginBottom: 0\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n            color: \"#fff\",\r\n            display: \"none\",\r\n            [theme.breakpoints.up(\"sm\")]: {\r\n                display: \"block\"\r\n            }\r\n        },\r\n\r\n        links: {\r\n            textDecoration: \"none\",\r\n            color: \"#fff\"\r\n        },\r\n        offset: theme.mixins.toolbar,\r\n\r\n    })\r\n);\r\n\r\n// Header with Navigation\r\nexport default function Header() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <header className={classes.root}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <Link to='/' className={classes.links}> <Typography variant=\"h6\" className={classes.title}>\r\n                        Google Books\r\n                    </Typography></Link>\r\n                    <Alert />\r\n                    <Link to='/'><Button className={classes.links}>Search</Button></Link>\r\n                    <Link to='/saved'><Button className={classes.links}>Saved Books</Button></Link>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <div className={classes.offset} />\r\n        </header>\r\n    )\r\n}","import React from \"react\";\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport heroImg from '../../assets/images/books-bg.jpg'\n\n\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        hero: {\n            height: 400,\n            backgroundImage: `url(${heroImg})`,\n            backgroundSize: \"cover\"\n        },\n        title: {\n            paddingTop: 50,\n            color: \"#FFF\",\n            textAlign: \"right\",\n            textShadow: \"2px 2px #000\"\n        }\n    })\n);\n\n// Hero image and page title\nexport default function Hero() {\n\n    const classes = useStyles();\n\n    return (\n        <section className={classes.hero}>\n            <Container>\n                <div className={classes.title}>\n                    <Typography variant=\"h2\" component=\"h1\">Google Books Search</Typography>\n                    <Typography component=\"h2\" variant=\"h5\">Search for and Save Books of Interest</Typography>\n                </div>\n            </Container>\n        </section>\n    )\n}","import React from \"react\";\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: \"40px 0 20px 0\"\r\n        },\r\n        input: {\r\n            width: \"100%\"\r\n        },\r\n        form: {\r\n            margin: \"10px, 0, 10px, 0\",\r\n        },\r\n        buttons: {\r\n            margin: \"10px\",\r\n        }\r\n    })\r\n);\r\n\r\n// form to type search term\r\nexport default function SearchForm(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container className={classes.root}>\r\n            <form className={classes.form} onSubmit={props.handleSubmit}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            Search Books\r\n                    </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={10}>\r\n                        <TextField className={classes.input} id=\"standard-search\" label=\"search\" type=\"search\" name=\"search\" variant=\"outlined\" onChange={props.handleInputChange} />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={2}>\r\n                        <Button className={classes.buttons} variant=\"contained\" color=\"secondary\" type=\"submit\">Search</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            border: \"1px solid #cfe1f7\",\r\n            marginBottom: \"20px\"\r\n        },\r\n        book: {\r\n            padding: \"40px 0 40px 0\",\r\n        },\r\n        buttons: {\r\n            margin: \"10px\"\r\n        }\r\n    })\r\n);\r\n\r\n// renders a book with title, authors, description ,image, and a link to the Google Books page\r\nexport default function Book(props) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const { _id, title, authors, description, image, link } = props.bookInfo;\r\n\r\n    return (\r\n        <Container className={classes.root} >\r\n            <Grid className={classes.book} container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\" paragraph>\r\n                        {authors && authors.join(\", \")}\r\n                    </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <img src={image} alt={title} />\r\n                </Grid>\r\n                <Grid item xs={12} sm={9}>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" paragraph>\r\n                        {description}\r\n                    </Typography>\r\n                    <Button className={classes.buttons} href={link} target=\"_blank\" variant=\"contained\" color=\"primary\">View</Button>\r\n                    {props.page === \"search\" ?\r\n                        <Button className={classes.buttons} variant=\"contained\" color=\"default\" onClick={() => props.saveBook(props.bookInfo)}>Save</Button> :\r\n                        <Button className={classes.buttons} variant=\"contained\" color=\"secondary\" onClick={() => props.deleteBook(_id)}>Delete</Button>}\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n\r\n\r\n    )\r\n\r\n}\r\n","import React from \"react\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Book from '../Book';\r\n\r\n// map over search results to create Book components and display books found\r\nexport default function BookResults(props) {\r\n\r\n    const { bookResults, saveBook, deleteBook, page } = props;\r\n\r\n    return (\r\n        <Container>\r\n            {bookResults.map(book => {\r\n                return <Book key={book.id || book._id} bookInfo={book} page={page} saveBook={saveBook} deleteBook={deleteBook} />\r\n            })}\r\n        </Container>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    // searches Google Books API\r\n    searchGoogleBooks: function (searchTerm) {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${searchTerm}`)\r\n    },\r\n\r\n    // Gets all books\r\n    getBooks: function () {\r\n        return axios.get(\"/api/books\");\r\n    },\r\n    // Gets the book with the given id\r\n    getBook: function (id) {\r\n        return axios.get(\"/api/books/\" + id);\r\n    },\r\n    // Deletes the book with the given id\r\n    deleteBook: function (id) {\r\n        return axios.delete(\"/api/books/\" + id);\r\n    },\r\n    // Saves a book to the database\r\n    saveBook: function (bookData) {\r\n        return axios.post(\"/api/books\", bookData);\r\n    }\r\n};","import React, { useState } from \"react\";\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchForm from '../components/SearchForm';\r\nimport BookResults from '../components/BookResults';\r\nimport API from \"../utils/API\";\r\nimport parseBooks from \"../utils/parseBooks\";\r\nimport socket from '../utils/socket';\r\n\r\nexport default function Search() {\r\n\r\n    const [bookResults, setBookResults] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n    // Searches Google books and sets the response to bookResults\r\n    function searchBooks() {\r\n        API.searchGoogleBooks(searchTerm)\r\n            .then(res => {\r\n                res.data.totalItems > 0 ? setBookResults(parseBooks(res.data.items)) :\r\n                    setBookResults([\"No Books Found.\"])\r\n            })\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Saves a book to the database\r\n    function saveBook(book) {\r\n        API.saveBook(book)\r\n            .then(res => {\r\n                socket.emit(\"saveMsg\", `${res.data.title} has been saved!`);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    // Handles updating component state when the user types into the input field\r\n    const handleInputChange = event => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        searchBooks(searchTerm.split(\" \").join(\"+\").trim())\r\n    };\r\n\r\n    return (\r\n        <section>\r\n            <Container>\r\n                <SearchForm handleInputChange={handleInputChange} handleSubmit={handleSubmit} />\r\n                {bookResults[0] === \"No Books Found.\" ?\r\n                    <Typography>No Books Found.</Typography> :\r\n                    <BookResults bookResults={bookResults} saveBook={saveBook} page=\"search\" />\r\n                }\r\n            </Container>\r\n        </section>\r\n\r\n    )\r\n\r\n}","// parses needed book information from Google Books response\r\nexport default function parseBooks(searchResults) {\r\n    let parsedBook = {\r\n        id: \"\",\r\n        title: \"\",\r\n        authors: [],\r\n        description: \"\",\r\n        image: \"\",\r\n        link: \"\"\r\n    }\r\n\r\n    return searchResults.map(book => {\r\n        let id = book.id ? book.id + book.etag : \"\";\r\n        let title = book.volumeInfo.title ? book.volumeInfo.title : \"\";\r\n        let authors = book.volumeInfo.authors ? book.volumeInfo.authors : [];\r\n        let description = book.volumeInfo.description ? book.volumeInfo.description : \"\";\r\n        let image = book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : \"\";\r\n        let link = book.volumeInfo.infoLink ? book.volumeInfo.infoLink : \"\";\r\n        parsedBook = {\r\n            id,\r\n            title,\r\n            authors,\r\n            description,\r\n            image,\r\n            link\r\n        }\r\n        return parsedBook\r\n    })\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BookResults from '../components/BookResults';\r\nimport API from \"../utils/API\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        root: {\r\n            margin: \"20px 0 20px 0\"\r\n        },\r\n        title: {\r\n            margin: \"40px 20px 40px 20px\",\r\n        },\r\n        buttons: {\r\n            margin: \"10px\",\r\n        }\r\n    })\r\n);\r\n\r\nexport default function Saved() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [savedBooks, setSavedBooks] = useState([]);\r\n\r\n\r\n    // Load all books and store them with setBooks\r\n    useEffect(() => {\r\n        loadBooks()\r\n    }, [])\r\n\r\n\r\n    // Loads all books and sets them to savedBooks\r\n    function loadBooks() {\r\n        API.getBooks()\r\n            .then(res =>\r\n                setSavedBooks(res.data)\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    // Deletes a book from the database with a given id, then reloads books from the db\r\n    function deleteBook(id) {\r\n        API.deleteBook(id)\r\n            .then(res => loadBooks())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <Container className={classes.root}>\r\n                <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Saved Books\r\n                </Typography>\r\n                <BookResults bookResults={savedBooks} deleteBook={deleteBook} page=\"saved\" />\r\n            </Container>\r\n        </section>\r\n\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport Nav from \"./components/Nav\";\r\nimport Hero from \"./components/Hero\";\r\nimport Search from \"./pages/Search\";\r\nimport Saved from \"./pages/Saved\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Nav />\r\n        <Hero />\r\n        <main>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Search />\r\n            </Route>\r\n            <Route exact path=\"/saved\">\r\n              <Saved />\r\n            </Route>\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/books-bg.2e6f16af.jpg\";"],"sourceRoot":""}